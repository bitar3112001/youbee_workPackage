{"version":3,"file":"ngx-apexcharts-signals.mjs","sources":["../../../projects/ngx-apexcharts/signals/chart.component.ts","../../../projects/ngx-apexcharts/signals/ngx-apexcharts.module.ts","../../../projects/ngx-apexcharts/signals/ngx-apexcharts-signals.ts"],"sourcesContent":["import {\r\n  Component,\r\n  ElementRef,\r\n  OnDestroy,\r\n  ChangeDetectionStrategy,\r\n  inject,\r\n  input,\r\n  viewChild,\r\n  afterNextRender,\r\n  afterRender,\r\n  DestroyRef,\r\n  signal\r\n} from '@angular/core';\r\nimport {\r\n  ApexAnnotations,\r\n  ApexAxisChartSeries,\r\n  ApexChart,\r\n  ApexDataLabels,\r\n  ApexFill,\r\n  ApexGrid,\r\n  ApexLegend,\r\n  ApexNonAxisChartSeries,\r\n  ApexMarkers,\r\n  ApexNoData,\r\n  ApexPlotOptions,\r\n  ApexResponsive,\r\n  ApexStates,\r\n  ApexStroke,\r\n  ApexTheme,\r\n  ApexTitleSubtitle,\r\n  ApexTooltip,\r\n  ApexXAxis,\r\n  ApexYAxis,\r\n  ApexForecastDataPoints,\r\n  ApexOptions\r\n} from './apex-types';\r\n\r\nimport type ApexCharts from 'apexcharts';\r\n\r\ndeclare global {\r\n  interface Window {\r\n    ApexCharts: any;\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'apx-chart',\r\n  template: '<div #chart></div>',\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ChartComponent implements OnDestroy {\r\n\r\n  public chart = input<ApexChart>();\r\n\r\n  public annotations = input<ApexAnnotations>();\r\n\r\n  public colors = input<any[]>();\r\n\r\n  public dataLabels = input<ApexDataLabels>();\r\n\r\n  public series = input<ApexAxisChartSeries | ApexNonAxisChartSeries>();\r\n\r\n  public stroke = input<ApexStroke>();\r\n\r\n  public labels = input<string[]>();\r\n\r\n  public legend = input<ApexLegend>();\r\n\r\n  public markers = input<ApexMarkers>();\r\n\r\n  public noData = input<ApexNoData>();\r\n\r\n  public fill = input<ApexFill>();\r\n\r\n  public tooltip = input<ApexTooltip>();\r\n\r\n  public plotOptions = input<ApexPlotOptions>();\r\n\r\n  public responsive = input<ApexResponsive[]>();\r\n\r\n  public xaxis = input<ApexXAxis>();\r\n\r\n  public yaxis = input<ApexYAxis | ApexYAxis[]>();\r\n\r\n  public forecastDataPoints = input<ApexForecastDataPoints>();\r\n\r\n  public grid = input<ApexGrid>();\r\n\r\n  public states = input<ApexStates>();\r\n\r\n  public title = input<ApexTitleSubtitle>();\r\n\r\n  public subtitle = input<ApexTitleSubtitle>();\r\n\r\n  public theme = input<ApexTheme>();\r\n\r\n  public autoUpdateSeries = input<boolean>(true);\r\n\r\n  public readonly chartElement = viewChild.required<ElementRef>('chart');\r\n\r\n  private chartObj?: ApexCharts;\r\n  private hasPendingLoad = signal<boolean>(false);\r\n\r\n  constructor() {\r\n    afterNextRender(async() => {\r\n      this.hasPendingLoad.set(true);\r\n      const ApexCharts = (await import('apexcharts')).default;\r\n      const options = this.buildOptions();\r\n      this.chartObj = new ApexCharts(this.chartElement().nativeElement, options);\r\n      window.ApexCharts = ApexCharts;\r\n      await this.render();\r\n      this.hasPendingLoad.set(true);\r\n    });\r\n    afterRender(async() => {\r\n      if (this.hasPendingLoad() === true) {\r\n        return;\r\n      }\r\n      this.hasPendingLoad.set(true);\r\n      this.chartObj?.destroy();\r\n      const ApexCharts = (await import('apexcharts')).default;\r\n      const options = this.buildOptions();\r\n      this.chartObj = new ApexCharts(this.chartElement().nativeElement, options);\r\n      await this.render();\r\n      this.hasPendingLoad.set(false);\r\n    });\r\n\r\n    const destroyRef = inject(DestroyRef);\r\n    destroyRef.onDestroy(() => this.chartObj?.destroy());\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroy();\r\n  }\r\n\r\n  render(): Promise<void> | undefined {\r\n    return this.chartObj?.render();\r\n  }\r\n\r\n  updateOptions(\r\n    options: any,\r\n    redrawPaths?: boolean,\r\n    animate?: boolean,\r\n    updateSyncedCharts?: boolean\r\n  ): Promise<void> | undefined {\r\n    return this.chartObj?.updateOptions(\r\n      options,\r\n      redrawPaths,\r\n      animate,\r\n      updateSyncedCharts\r\n    );\r\n  }\r\n\r\n  updateSeries(\r\n    newSeries: ApexAxisChartSeries | ApexNonAxisChartSeries,\r\n    animate?: boolean\r\n  ): Promise<void> | undefined {\r\n    return this.chartObj?.updateSeries(newSeries, animate);\r\n  }\r\n\r\n  appendSeries(\r\n    newSeries: ApexAxisChartSeries | ApexNonAxisChartSeries,\r\n    animate?: boolean\r\n  ): void {\r\n    this.chartObj?.appendSeries(newSeries, animate);\r\n  }\r\n\r\n  appendData(newData: any[]): void {\r\n    this.chartObj?.appendData(newData);\r\n  }\r\n\r\n  toggleSeries(seriesName: string): Promise<void> {\r\n    return this.chartObj?.toggleSeries(seriesName);\r\n  }\r\n\r\n  showSeries(seriesName: string): void {\r\n    this.chartObj?.showSeries(seriesName);\r\n  }\r\n\r\n  hideSeries(seriesName: string): void {\r\n    this.chartObj?.hideSeries(seriesName);\r\n  }\r\n\r\n  resetSeries(): void {\r\n    this.chartObj?.resetSeries();\r\n  }\r\n\r\n  zoomX(min: number, max: number): void {\r\n    this.chartObj?.zoomX(min, max);\r\n  }\r\n\r\n  toggleDataPointSelection(\r\n    seriesIndex: number,\r\n    dataPointIndex?: number\r\n  ): void {\r\n    this.chartObj?.toggleDataPointSelection(seriesIndex, dataPointIndex);\r\n  }\r\n\r\n  destroy(): void {\r\n    this.chartObj?.destroy();\r\n  }\r\n\r\n  setLocale(localeName: string): void {\r\n    this.chartObj?.setLocale(localeName);\r\n  }\r\n\r\n  paper(): void {\r\n    this.chartObj?.paper();\r\n  }\r\n\r\n  addXaxisAnnotation(\r\n    options: any,\r\n    pushToMemory?: boolean,\r\n    context?: any\r\n  ): void {\r\n    this.chartObj?.addXaxisAnnotation(options, pushToMemory, context);\r\n  }\r\n\r\n  addYaxisAnnotation(\r\n    options: any,\r\n    pushToMemory?: boolean,\r\n    context?: any\r\n  ): void {\r\n    this.chartObj?.addYaxisAnnotation(options, pushToMemory, context);\r\n  }\r\n\r\n  addPointAnnotation(\r\n    options: any,\r\n    pushToMemory?: boolean,\r\n    context?: any\r\n  ): void {\r\n    this.chartObj?.addPointAnnotation(options, pushToMemory, context);\r\n  }\r\n\r\n  removeAnnotation(id: string, options?: any): void {\r\n    this.chartObj?.removeAnnotation(id, options);\r\n  }\r\n\r\n  clearAnnotations(options?: any): void {\r\n    this.chartObj?.clearAnnotations(options);\r\n  }\r\n\r\n  dataURI(options?: any): Promise<{ imgURI: string } | { blob: Blob }> | undefined {\r\n    return this.chartObj?.dataURI(options);\r\n  }\r\n\r\n  private buildOptions(): ApexOptions {\r\n    const options: ApexOptions = {};\r\n\r\n    if (this.annotations()) {\r\n      options.annotations = this.annotations();\r\n    }\r\n    if (this.chart()) {\r\n      options.chart = this.chart();\r\n    }\r\n    if (this.colors()) {\r\n      options.colors = this.colors();\r\n    }\r\n    if (this.dataLabels()) {\r\n      options.dataLabels = this.dataLabels();\r\n    }\r\n    if (this.series()) {\r\n      options.series = this.series();\r\n    }\r\n    if (this.stroke()) {\r\n      options.stroke = this.stroke();\r\n    }\r\n    if (this.labels()) {\r\n      options.labels = this.labels();\r\n    }\r\n    if (this.legend()) {\r\n      options.legend = this.legend();\r\n    }\r\n    if (this.fill()) {\r\n      options.fill = this.fill();\r\n    }\r\n    if (this.tooltip()) {\r\n      options.tooltip = this.tooltip();\r\n    }\r\n    if (this.plotOptions()) {\r\n      options.plotOptions = this.plotOptions();\r\n    }\r\n    if (this.responsive()) {\r\n      options.responsive = this.responsive();\r\n    }\r\n    if (this.markers()) {\r\n      options.markers = this.markers();\r\n    }\r\n    if (this.noData()) {\r\n      options.noData = this.noData();\r\n    }\r\n    if (this.xaxis()) {\r\n      options.xaxis = this.xaxis();\r\n    }\r\n    if (this.yaxis()) {\r\n      options.yaxis = this.yaxis();\r\n    }\r\n    if (this.forecastDataPoints()) {\r\n      options.forecastDataPoints = this.forecastDataPoints();\r\n    }\r\n    if (this.grid()) {\r\n      options.grid = this.grid();\r\n    }\r\n    if (this.states()) {\r\n      options.states = this.states();\r\n    }\r\n    if (this.title()) {\r\n      options.title = this.title();\r\n    }\r\n    if (this.subtitle()) {\r\n      options.subtitle = this.subtitle();\r\n    }\r\n    if (this.theme()) {\r\n      options.theme = this.theme();\r\n    }\r\n\r\n    return options;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { ChartComponent } from './chart.component';\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [ChartComponent],\r\n  exports: [ChartComponent],\r\n})\r\nexport class NgxApexchartsModule {}\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}